// Code generated by protoc-gen-go.
// source: add.proto
// DO NOT EDIT!

/*
Package add is a generated protocol buffer package.

It is generated from these files:
	add.proto

It has these top-level messages:
	AddRequest
	AddReply
*/
package add

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type AddRequest struct {
	Num1 int32 `protobuf:"varint,1,opt,name=num1" json:"num1,omitempty"`
	Num2 int32 `protobuf:"varint,2,opt,name=num2" json:"num2,omitempty"`
}

func (m *AddRequest) Reset()                    { *m = AddRequest{} }
func (m *AddRequest) String() string            { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()               {}
func (*AddRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddRequest) GetNum1() int32 {
	if m != nil {
		return m.Num1
	}
	return 0
}

func (m *AddRequest) GetNum2() int32 {
	if m != nil {
		return m.Num2
	}
	return 0
}

// The response message containing the greetings
type AddReply struct {
	Result int32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *AddReply) Reset()                    { *m = AddReply{} }
func (m *AddReply) String() string            { return proto.CompactTextString(m) }
func (*AddReply) ProtoMessage()               {}
func (*AddReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AddReply) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*AddRequest)(nil), "add.AddRequest")
	proto.RegisterType((*AddReply)(nil), "add.AddReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Add service

type AddClient interface {
	// Sends a greeting
	DoAdd(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddReply, error)
}

type addClient struct {
	cc *grpc.ClientConn
}

func NewAddClient(cc *grpc.ClientConn) AddClient {
	return &addClient{cc}
}

func (c *addClient) DoAdd(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddReply, error) {
	out := new(AddReply)
	err := grpc.Invoke(ctx, "/add.Add/DoAdd", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Add service

type AddServer interface {
	// Sends a greeting
	DoAdd(context.Context, *AddRequest) (*AddReply, error)
}

func RegisterAddServer(s *grpc.Server, srv AddServer) {
	s.RegisterService(&_Add_serviceDesc, srv)
}

func _Add_DoAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServer).DoAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/add.Add/DoAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServer).DoAdd(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Add_serviceDesc = grpc.ServiceDesc{
	ServiceName: "add.Add",
	HandlerType: (*AddServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoAdd",
			Handler:    _Add_DoAdd_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "add.proto",
}

func init() { proto.RegisterFile("add.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x4c, 0x49, 0xd1,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x4c, 0x49, 0x51, 0x32, 0xe1, 0xe2, 0x72, 0x4c,
	0x49, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0xc9, 0x2b, 0xcd, 0x35,
	0x94, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x02, 0xb3, 0xa1, 0x62, 0x46, 0x12, 0x4c, 0x70, 0x31,
	0x23, 0x25, 0x25, 0x2e, 0x0e, 0xb0, 0xae, 0x82, 0x9c, 0x4a, 0x21, 0x31, 0x2e, 0xb6, 0xa2, 0xd4,
	0xe2, 0xd2, 0x9c, 0x12, 0xa8, 0x2e, 0x28, 0xcf, 0xc8, 0x80, 0x8b, 0xd9, 0x31, 0x25, 0x45, 0x48,
	0x93, 0x8b, 0xd5, 0x25, 0x1f, 0xc4, 0xe0, 0xd7, 0x03, 0x59, 0x8d, 0xb0, 0x4c, 0x8a, 0x17, 0x21,
	0x50, 0x90, 0x53, 0xa9, 0xc4, 0xe0, 0x24, 0xc9, 0xc5, 0x9d, 0x99, 0xaf, 0x97, 0x5e, 0x54, 0x90,
	0x0c, 0x92, 0x71, 0xe2, 0x48, 0x4c, 0x49, 0x09, 0x00, 0xb9, 0x34, 0x80, 0x31, 0x89, 0x0d, 0xec,
	0x64, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x45, 0x0d, 0x6a, 0x44, 0xbf, 0x00, 0x00, 0x00,
}
